// <auto-generated />
using System;
using GYM.NET;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GYM.NET.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20230611214321_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GYM.NET.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Cgpa")
                        .HasColumnType("float")
                        .HasColumnName("cgpa");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password");

                    b.Property<string>("University")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("university");

                    b.HasKey("Id")
                        .HasName("PK__student__3214EC07E2125126");

                    b.ToTable("student", (string)null);
                });

            modelBuilder.Entity("GYM.NET.Trainee", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("username");

                    b.Property<decimal>("Age")
                        .HasColumnType("numeric(3, 0)")
                        .HasColumnName("age");

                    b.Property<string>("AssignedTrainer")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("assigned_trainer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("mobile_number");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("password");

                    b.HasKey("Username")
                        .HasName("pk_trainee");

                    b.HasIndex("AssignedTrainer");

                    b.HasIndex(new[] { "Email" }, "UQ__trainee__AB6E6164CF1D79A3")
                        .IsUnique();

                    b.HasIndex(new[] { "Username" }, "UQ__trainee__F3DBC572550176CF")
                        .IsUnique();

                    b.ToTable("trainee", (string)null);
                });

            modelBuilder.Entity("GYM.NET.Trainer", b =>
                {
                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<int>("ConsultFee")
                        .HasColumnType("int")
                        .HasColumnName("consult_fee");

                    b.Property<string>("Experience")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("experience");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("mobile_number");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("ParticipatedInAnyCompetition")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("participated_in_any_competition");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password");

                    b.Property<string>("Speciality")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("speciality");

                    b.HasKey("Email")
                        .HasName("pk_trainer");

                    b.HasIndex(new[] { "Email" }, "UQ__Trainer__AB6E6164921DD469")
                        .IsUnique();

                    b.ToTable("Trainer", (string)null);
                });

            modelBuilder.Entity("GYM.NET.TrainerImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("image_url");

                    b.HasKey("Id")
                        .HasName("pk_trainerImages");

                    b.HasIndex("Email");

                    b.ToTable("trainerImages", (string)null);
                });

            modelBuilder.Entity("GYM.NET.TrainerVideo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("VideoUrl")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("video_url");

                    b.HasKey("Id")
                        .HasName("pk_trainerVideos");

                    b.HasIndex("Email");

                    b.ToTable("trainerVideos", (string)null);
                });

            modelBuilder.Entity("GYM.NET.Trainee", b =>
                {
                    b.HasOne("GYM.NET.Trainer", "AssignedTrainerNavigation")
                        .WithMany("Trainees")
                        .HasForeignKey("AssignedTrainer")
                        .HasConstraintName("fk_assgn_trainer");

                    b.Navigation("AssignedTrainerNavigation");
                });

            modelBuilder.Entity("GYM.NET.TrainerImage", b =>
                {
                    b.HasOne("GYM.NET.Trainer", "EmailNavigation")
                        .WithMany("TrainerImages")
                        .HasForeignKey("Email")
                        .IsRequired()
                        .HasConstraintName("fk_trainerImages");

                    b.Navigation("EmailNavigation");
                });

            modelBuilder.Entity("GYM.NET.TrainerVideo", b =>
                {
                    b.HasOne("GYM.NET.Trainer", "EmailNavigation")
                        .WithMany("TrainerVideos")
                        .HasForeignKey("Email")
                        .IsRequired()
                        .HasConstraintName("fk_trainerVideos");

                    b.Navigation("EmailNavigation");
                });

            modelBuilder.Entity("GYM.NET.Trainer", b =>
                {
                    b.Navigation("Trainees");

                    b.Navigation("TrainerImages");

                    b.Navigation("TrainerVideos");
                });
#pragma warning restore 612, 618
        }
    }
}
